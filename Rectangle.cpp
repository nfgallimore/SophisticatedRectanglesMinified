// uses algorithm by Curd from http://stackoverflow.com/questions/2303278/find-if-4-points-on-a-plane-form-a-rectangle */
#include <cmath>
#include <iostream>
#include "Rectangle.hpp"
Rectangle::Rectangle(Point p,Point q,Point r,Point t){if(b(p,q,r,t))a1.x=p.x,a1.y=p.y,a2.x=q.x,a2.y=q.y,a3.x=r.x,a3.y=r.y,a4.x=t.x,a4.y=t.y;}void Rectangle::setCoord(Point p,Point q,Point r,Point t){if(b(p,q,r,t))a1.x=p.x,a1.y=p.y,a2.x=q.x,a2.y=q.y,a3.x=r.x,a3.y=r.y,a4.x=t.x,a4.y=t.y;}double Rectangle::square(){return(length()==width());}double Rectangle::length(){double l=sqrt((a2.x-a1.x)*(a2.x-a1.x)+(a2.y-a1.y)*(a2.y-a1.y)),m=sqrt((a3.x-a1.x)*(a3.x-a1.x)+(a3.y-a1.y)*(a3.y-a1.y)),n=sqrt((a4.x-a1.x)*(a4.x-a1.x)+(a4.y-a1.y)*(a4.y-a1.y)),h,s;(l>m&&l>n)?h=l:(m>n)?h=m:h=n;if(l==h)(m>l)?s=m:s=l;if(m==h)(l>n)?s=l:s=n;if(n==h)(m>l)?s=m:s=l;return s;}double Rectangle::width(){double w=sqrt((a2.x-a1.x)*(a2.x-a1.x)+(a2.y-a1.y)*(a2.y-a1.y)),x=sqrt((a3.x-a1.x)*(a3.x-a1.x)+(a3.y-a1.y)*(a3.y-a1.y)),y=sqrt((a4.x-a1.x)*(a4.x-a1.x)+(a4.y-a1.y)*(a4.y-a1.y)),z;(w<x&&w<y)?z=w:(x<y)?z=x:z=y;return z;}double Rectangle::perimeter(){return length()*2+width()*2;}double Rectangle::area(){return length()*width();}bool Rectangle::b(Point p,Point q,Point r,Point t){if(!(p.x==q.x&&p.x==r.x&&p.x==t.x&&q.x==r.x&&q.x==t.x&&r.x==t.x&&p.y==q.y&&p.y==r.y&&p.y==t.y&&q.y==r.y&&q.y==t.y&&r.y==t.y))if(p.x>0&&p.y>0&&q.x>0&&q.y>0&&r.x>0&&r.y>0&&t.x>0&&t.y>0&&p.x<=20&&p.y<=20&&q.x<=20&&q.y<=20&&r.x<=20&&r.y<=20&&t.x<=20&&t.y<=20)return((p.x+q.x+r.x+t.x)/4-p.x)*((p.x+q.x+r.x+t.x)/4-p.x)+((p.y+q.y+r.y+t.y)/4-p.y)*((p.y+q.y+r.y+t.y)/4-p.y)==((p.x+q.x+r.x+t.x)/4-q.x)*((p.x+q.x+r.x+t.x)/4-q.x)+((p.y+q.y+r.y+t.y)/4-q.y)*((p.y+q.y+r.y+t.y)/4-q.y)&&((p.x+q.x+r.x+t.x)/4-p.x)*((p.x+q.x+r.x+t.x)/4-p.x)+((p.y+q.y+r.y+t.y)/4-p.y)*((p.y+q.y+r.y+t.y)/4-p.y)==((p.x+q.x+r.x+t.x)/4-r.x)*((p.x+q.x+r.x+t.x)/4-r.x)+((p.y+q.y+r.y+t.y)/4-r.y)*((p.y+q.y+r.y+t.y)/4-r.y)&&((p.x+q.x+r.x+t.x)/4-p.x)*((p.x+q.x+r.x+t.x)/4-p.x)+((p.y+q.y+r.y+t.y)/4-p.y)*((p.y+q.y+r.y+t.y)/4-p.y)==((p.x+q.x+r.x+t.x)/4-t.x)*((p.x+q.x+r.x+t.x)/4-t.x)+((p.y+q.y+r.y+t.y)/4-t.y)*((p.y+q.y+r.y+t.y)/4-t.y);else return 1;else return 1;}